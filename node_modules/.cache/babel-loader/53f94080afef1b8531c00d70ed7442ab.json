{"ast":null,"code":"import _regeneratorRuntime from \"/home/fs/srmswap/oyster-swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/fs/srmswap/oyster-swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/fs/srmswap/oyster-swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/fs/srmswap/oyster-swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/fs/srmswap/oyster-swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/fs/srmswap/oyster-swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/fs/srmswap/oyster-swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/fs/srmswap/oyster-swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport EventEmitter from 'eventemitter3';\nimport { PublicKey } from '@solana/web3.js';\nimport bs58 from 'bs58';\n\nvar Wallet = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(Wallet, _EventEmitter);\n\n  var _super = _createSuper(Wallet);\n\n  function Wallet(providerUrl, network) {\n    var _this2;\n\n    _classCallCheck(this, Wallet);\n\n    var _this;\n\n    _this2 = _super.call(this);\n    _this = _assertThisInitialized(_this2);\n\n    _this2._handleMessage = function (e) {\n      if (e.origin === _this2._providerUrl.origin && e.source === _this2._popup) {\n        if (e.data.method === 'connected') {\n          var newPublicKey = new PublicKey(e.data.params.publicKey);\n\n          if (!_this2._publicKey || !_this2._publicKey.equals(newPublicKey)) {\n            _this2._handleDisconnect();\n\n            _this2._publicKey = newPublicKey;\n            _this2._autoApprove = !!e.data.params.autoApprove;\n\n            _this2.emit('connect', _this2._publicKey);\n          }\n        } else if (e.data.method === 'disconnected') {\n          _this2._handleDisconnect();\n        } else if (e.data.result || e.data.error) {\n          if (_this2._responsePromises.has(e.data.id)) {\n            var _this2$_responsePromi = _this2._responsePromises.get(e.data.id),\n                _this2$_responsePromi2 = _slicedToArray(_this2$_responsePromi, 2),\n                resolve = _this2$_responsePromi2[0],\n                reject = _this2$_responsePromi2[1];\n\n            if (e.data.result) {\n              resolve(e.data.result);\n            } else {\n              reject(new Error(e.data.error));\n            }\n          }\n        }\n      }\n    };\n\n    _this2._handleDisconnect = function () {\n      if (_this2._publicKey) {\n        _this2._publicKey = null;\n\n        _this2.emit('disconnect');\n      }\n\n      _this2._responsePromises.forEach(function (_ref, id) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            resolve = _ref2[0],\n            reject = _ref2[1];\n\n        _this2._responsePromises.delete(id);\n\n        reject('Wallet disconnected');\n      });\n    };\n\n    _this2._sendRequest = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(method, params) {\n        var requestId;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (_this.connected) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw new Error('Wallet not connected');\n\n              case 2:\n                requestId = _this._nextRequestId;\n                ++_this._nextRequestId;\n                return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  _this._responsePromises.set(requestId, [resolve, reject]);\n\n                  _this._popup.postMessage({\n                    jsonrpc: '2.0',\n                    id: requestId,\n                    method: method,\n                    params: params\n                  }, _this._providerUrl.origin);\n\n                  if (!_this.autoApprove) {\n                    _this._popup.focus();\n                  }\n                }));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this2.connect = function () {\n      if (_this2._popup) {\n        _this2._popup.close();\n      }\n\n      if (!_this2._handlerAdded) {\n        _this2._handlerAdded = true;\n        window.addEventListener('message', _this2._handleMessage);\n        window.addEventListener('beforeunload', _this2.disconnect);\n      }\n\n      window.name = 'parent';\n      _this2._popup = window.open(_this2._providerUrl.toString(), '_blank', 'location,resizable,width=460,height=675');\n      return new Promise(function (resolve) {\n        _this2.once('connect', resolve);\n      });\n    };\n\n    _this2.disconnect = function () {\n      if (_this2._popup) {\n        _this2._popup.close();\n      }\n\n      _this2._handleDisconnect();\n    };\n\n    _this2.signTransaction = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(transaction) {\n        var response, signature, publicKey;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _this._sendRequest('signTransaction', {\n                  message: bs58.encode(transaction.serializeMessage())\n                });\n\n              case 2:\n                response = _context2.sent;\n                signature = bs58.decode(response.signature);\n                publicKey = new PublicKey(response.publicKey);\n                transaction.addSignature(publicKey, signature);\n                return _context2.abrupt(\"return\", transaction);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    _this2._providerUrl = new URL(providerUrl);\n    _this2._providerUrl.hash = new URLSearchParams({\n      origin: window.location.origin,\n      network: network\n    }).toString();\n    _this2._publicKey = null;\n    _this2._autoApprove = false;\n    _this2._popup = null;\n    _this2._handlerAdded = false;\n    _this2._nextRequestId = 1;\n    _this2._responsePromises = new Map();\n    return _this2;\n  }\n\n  _createClass(Wallet, [{\n    key: \"publicKey\",\n    get: function get() {\n      return this._publicKey;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      return this._publicKey !== null;\n    }\n  }, {\n    key: \"autoApprove\",\n    get: function get() {\n      return this._autoApprove;\n    }\n  }]);\n\n  return Wallet;\n}(EventEmitter);\n\nexport default Wallet;","map":null,"metadata":{},"sourceType":"module"}