{"ast":null,"code":"import _slicedToArray from\"/home/fs/srmswap/oyster-swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useCallback,useState}from\"react\";import PopularTokens from\"./token-list.json\";var AddressToToken=Object.keys(PopularTokens).reduce(function(map,key){var tokens=PopularTokens[key];var knownMints=tokens.reduce(function(map,item){map.set(item.mintAddress,item);return map;},new Map());map.set(key,knownMints);return map;},new Map());export function useLocalStorageState(key,defaultState){var _useState=useState(function(){// NOTE: Not sure if this is ok\nvar storedState=localStorage.getItem(key);if(storedState){return JSON.parse(storedState);}return defaultState;}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var setLocalStorageState=useCallback(function(newState){var changed=state!==newState;if(!changed){return;}setState(newState);if(newState===null){localStorage.removeItem(key);}else{localStorage.setItem(key,JSON.stringify(newState));}},[state,key]);return[state,setLocalStorageState];}// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address){var chars=arguments.length>1&&arguments[1]!==undefined?arguments[1]:4;return\"0x\".concat(address.substring(0,chars),\"...\").concat(address.substring(44-chars));}export function getTokenName(env,mintAddress){var _AddressToToken$get,_AddressToToken$get$g;var knownSymbol=(_AddressToToken$get=AddressToToken.get(env))===null||_AddressToToken$get===void 0?void 0:(_AddressToToken$get$g=_AddressToToken$get.get(mintAddress))===null||_AddressToToken$get$g===void 0?void 0:_AddressToToken$get$g.tokenSymbol;if(knownSymbol){return knownSymbol;}return shortenAddress(mintAddress).substring(10).toUpperCase();}export function getTokenIcon(env,mintAddress){var _AddressToToken$get2,_AddressToToken$get2$;return(_AddressToToken$get2=AddressToToken.get(env))===null||_AddressToToken$get2===void 0?void 0:(_AddressToToken$get2$=_AddressToToken$get2.get(mintAddress))===null||_AddressToToken$get2$===void 0?void 0:_AddressToToken$get2$.icon;}export function getPoolName(env,pool){var sorted=pool.pubkeys.holdingMints.map(function(a){return a.toBase58();}).sort();return sorted.map(function(item){return getTokenName(env,item);}).join(\"/\");}export function isKnownMint(env,mintAddress){var _AddressToToken$get3;return!!((_AddressToToken$get3=AddressToToken.get(env))===null||_AddressToToken$get3===void 0?void 0:_AddressToToken$get3.get(mintAddress));}export var STABLE_COINS=new Set([\"USDC\",\"wUSDC\",\"USDT\"]);export function chunks(array,size){return Array.apply(0,new Array(Math.ceil(array.length/size))).map(function(_,index){return array.slice(index*size,(index+1)*size);});}export function convert(account,mint){var _account$info$amount;var rate=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1.0;if(!account){return 0;}var precision=Math.pow(10,(mint===null||mint===void 0?void 0:mint.decimals)||0);return((_account$info$amount=account.info.amount)===null||_account$info$amount===void 0?void 0:_account$info$amount.toNumber())/precision*rate;}var SI_SYMBOL=[\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\"];var abbreviateNumber=function abbreviateNumber(number,precision){var tier=Math.log10(number)/3|0;var scaled=number;var suffix=SI_SYMBOL[tier];if(tier!==0){var scale=Math.pow(10,tier*3);scaled=number/scale;}return scaled.toFixed(precision)+suffix;};var format=function format(val,precision,abbr){return abbr?abbreviateNumber(val,precision):val.toFixed(precision);};export function formatTokenAmount(account,mint){var rate=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1.0;var prefix=arguments.length>3&&arguments[3]!==undefined?arguments[3]:\"\";var suffix=arguments.length>4&&arguments[4]!==undefined?arguments[4]:\"\";var precision=arguments.length>5&&arguments[5]!==undefined?arguments[5]:6;var abbr=arguments.length>6&&arguments[6]!==undefined?arguments[6]:false;if(!account){return\"\";}return\"\".concat([prefix]).concat(format(convert(account,mint,rate),precision,abbr)).concat(suffix);}","map":null,"metadata":{},"sourceType":"module"}