{"ast":null,"code":"import React from\"react\";import{ConfigProvider,Empty}from\"antd\";import{useOwnedPools}from\"../../utils/pools\";import{RemoveLiquidity}from\"./remove\";import{getPoolName}from\"../../utils/utils\";import{useMint}from\"../../utils/accounts\";import{useConnectionConfig}from\"../../utils/connection\";import{PoolIcon}from\"../tokenIcon\";import{useCurrencyPairState}from\"../../utils/currencyPair\";import\"./view.less\";var PoolItem=function PoolItem(props){var _useConnectionConfig=useConnectionConfig(),env=_useConnectionConfig.env;var _useCurrencyPairState=useCurrencyPairState(),A=_useCurrencyPairState.A,B=_useCurrencyPairState.B;var item=props.item;var mint=useMint(item.account.info.mint.toBase58());var amount=item.account.info.amount.toNumber()/Math.pow(10,(mint===null||mint===void 0?void 0:mint.decimals)||0);if(!amount){return null;}var setPair=function setPair(){A.setMint(props.item.pool.pubkeys.holdingMints[0].toBase58());B.setMint(props.item.pool.pubkeys.holdingMints[1].toBase58());};var sorted=item.pool.pubkeys.holdingMints.map(function(a){return a.toBase58();}).sort();if(item){return/*#__PURE__*/React.createElement(\"div\",{className:\"pool-item-row\",onClick:setPair,title:\"LP Token: \".concat(props.item.pool.pubkeys.mint.toBase58())},/*#__PURE__*/React.createElement(\"div\",{className:\"pool-item-amount\"},amount.toFixed(4)),/*#__PURE__*/React.createElement(\"div\",{className:\"pool-item-type\",title:\"Fee account\"},item.isFeeAccount?\" (F) \":\" \"),/*#__PURE__*/React.createElement(PoolIcon,{mintA:sorted[0],mintB:sorted[1],style:{marginLeft:\"0.5rem\"}}),/*#__PURE__*/React.createElement(\"div\",{className:\"pool-item-name\"},getPoolName(env,item.pool)),/*#__PURE__*/React.createElement(RemoveLiquidity,{instance:item}));}return null;};export var PoolAccounts=function PoolAccounts(){var pools=useOwnedPools();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",null,\"Your Liquidity\"),/*#__PURE__*/React.createElement(ConfigProvider,{renderEmpty:function renderEmpty(){return/*#__PURE__*/React.createElement(Empty,{image:Empty.PRESENTED_IMAGE_SIMPLE,description:\"No liquidity found.\"});}},/*#__PURE__*/React.createElement(\"div\",{className:\"pools-grid\"},pools.map(function(p){return/*#__PURE__*/React.createElement(PoolItem,{key:p===null||p===void 0?void 0:p.account.pubkey.toBase58(),item:p});}))));};","map":{"version":3,"sources":["/home/fs/srmswap/srmswap/srmswap.github.io/src/components/pool/view.tsx"],"names":["React","ConfigProvider","Empty","useOwnedPools","RemoveLiquidity","getPoolName","useMint","useConnectionConfig","PoolIcon","useCurrencyPairState","PoolItem","props","env","A","B","item","mint","account","info","toBase58","amount","toNumber","Math","pow","decimals","setPair","setMint","pool","pubkeys","holdingMints","sorted","map","a","sort","toFixed","isFeeAccount","marginLeft","PoolAccounts","pools","PRESENTED_IMAGE_SIMPLE","p","pubkey"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ConfigProvider, Empty } from \"antd\";\nimport { useOwnedPools } from \"../../utils/pools\";\nimport { RemoveLiquidity } from \"./remove\";\nimport { getPoolName } from \"../../utils/utils\";\nimport { useMint } from \"../../utils/accounts\";\nimport { useConnectionConfig } from \"../../utils/connection\";\nimport { PoolIcon } from \"../tokenIcon\";\nimport { PoolInfo, TokenAccount } from \"../../models\";\nimport { useCurrencyPairState } from \"../../utils/currencyPair\";\nimport \"./view.less\";\n\nconst PoolItem = (props: {\n  item: { pool: PoolInfo; isFeeAccount: boolean; account: TokenAccount };\n}) => {\n  const { env } = useConnectionConfig();\n  const { A, B } = useCurrencyPairState();\n  const item = props.item;\n  const mint = useMint(item.account.info.mint.toBase58());\n  const amount =\n    item.account.info.amount.toNumber() / Math.pow(10, mint?.decimals || 0);\n\n  if (!amount) {\n    return null;\n  }\n\n  const setPair = () => {\n    A.setMint(props.item.pool.pubkeys.holdingMints[0].toBase58());\n    B.setMint(props.item.pool.pubkeys.holdingMints[1].toBase58());\n  };\n\n  const sorted = item.pool.pubkeys.holdingMints.map((a) => a.toBase58()).sort();\n\n  if (item) {\n    return (\n      <div\n        className=\"pool-item-row\"\n        onClick={setPair}\n        title={`LP Token: ${props.item.pool.pubkeys.mint.toBase58()}`}\n      >\n        <div className=\"pool-item-amount\">{amount.toFixed(4)}</div>\n        <div className=\"pool-item-type\" title=\"Fee account\">\n          {item.isFeeAccount ? \" (F) \" : \" \"}\n        </div>\n        <PoolIcon\n          mintA={sorted[0]}\n          mintB={sorted[1]}\n          style={{ marginLeft: \"0.5rem\" }}\n        />\n        <div className=\"pool-item-name\">{getPoolName(env, item.pool)}</div>\n        <RemoveLiquidity instance={item} />\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport const PoolAccounts = () => {\n  const pools = useOwnedPools();\n\n  return (\n    <>\n      <div>Your Liquidity</div>\n      <ConfigProvider\n        renderEmpty={() => (\n          <Empty\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n            description=\"No liquidity found.\"\n          />\n        )}\n      >\n        <div className=\"pools-grid\">\n          {pools.map((p) => (\n            <PoolItem key={p?.account.pubkey.toBase58()} item={p as any} />\n          ))}\n        </div>\n      </ConfigProvider>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}