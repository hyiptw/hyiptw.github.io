{"ast":null,"code":"import _regeneratorRuntime from\"/home/fs/srmswap/oyster-swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/fs/srmswap/oyster-swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/fs/srmswap/oyster-swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{addLiquidity,usePoolForBasket}from\"../../utils/pools\";import{Button,Dropdown,Popover}from\"antd\";import{useWallet}from\"../../utils/wallet\";import{useConnection,useConnectionConfig,useSlippageConfig}from\"../../utils/connection\";import{Spin}from\"antd\";import{LoadingOutlined}from\"@ant-design/icons\";import{notify}from\"../../utils/notifications\";import{SupplyOverview}from\"./supplyOverview\";import{CurrencyInput}from\"../currencyInput\";import{DEFAULT_DENOMINATOR,PoolConfigCard}from\"./config\";import\"./add.less\";import{SWAP_PROGRAM_OWNER_FEE_ADDRESS}from\"../../utils/ids\";import{useCurrencyPairState}from\"../../utils/currencyPair\";import{CREATE_POOL_LABEL,ADD_LIQUIDITY_LABEL,generateActionLabel}from\"../labels\";var antIcon=/*#__PURE__*/React.createElement(LoadingOutlined,{style:{fontSize:24},spin:true});export var AddToLiquidity=function AddToLiquidity(){var _useWallet=useWallet(),wallet=_useWallet.wallet,connected=_useWallet.connected;var connection=useConnection();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),pendingTx=_useState2[0],setPendingTx=_useState2[1];var _useCurrencyPairState=useCurrencyPairState(),A=_useCurrencyPairState.A,B=_useCurrencyPairState.B,setLastTypedAccount=_useCurrencyPairState.setLastTypedAccount;var pool=usePoolForBasket([A===null||A===void 0?void 0:A.mintAddress,B===null||B===void 0?void 0:B.mintAddress]);var _useSlippageConfig=useSlippageConfig(),slippage=_useSlippageConfig.slippage;var _useConnectionConfig=useConnectionConfig(),env=_useConnectionConfig.env;var _useState3=useState({curveType:0,tradeFeeNumerator:25,tradeFeeDenominator:DEFAULT_DENOMINATOR,ownerTradeFeeNumerator:5,ownerTradeFeeDenominator:DEFAULT_DENOMINATOR,ownerWithdrawFeeNumerator:0,ownerWithdrawFeeDenominator:DEFAULT_DENOMINATOR}),_useState4=_slicedToArray(_useState3,2),options=_useState4[0],setOptions=_useState4[1];var executeAction=!connected?wallet.connect:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var components;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(A.account&&B.account&&A.mint&&B.mint){setPendingTx(true);components=[{account:A.account,mintAddress:A.mintAddress,amount:A.convertAmount()},{account:B.account,mintAddress:B.mintAddress,amount:B.convertAmount()}];addLiquidity(connection,wallet,components,slippage,pool,options).then(function(){setPendingTx(false);}).catch(function(e){console.log(\"Transaction failed\",e);notify({description:\"Please try again and approve transactions from your wallet\",message:\"Adding liquidity cancelled.\",type:\"error\"});setPendingTx(false);});}case 1:case\"end\":return _context.stop();}}},_callee);}));var hasSufficientBalance=A.sufficientBalance()&&B.sufficientBalance();var createPoolButton=SWAP_PROGRAM_OWNER_FEE_ADDRESS?/*#__PURE__*/React.createElement(Button,{className:\"add-button\",onClick:executeAction,disabled:connected&&(pendingTx||!A.account||!B.account||A.account===B.account),type:\"primary\",size:\"large\"},generateActionLabel(CREATE_POOL_LABEL,connected,env,A,B),pendingTx&&/*#__PURE__*/React.createElement(Spin,{indicator:antIcon,className:\"add-spinner\"})):/*#__PURE__*/React.createElement(Dropdown.Button,{className:\"add-button\",onClick:executeAction,disabled:connected&&(pendingTx||!A.account||!B.account||A.account===B.account),type:\"primary\",size:\"large\",overlay:/*#__PURE__*/React.createElement(PoolConfigCard,{options:options,setOptions:setOptions})},generateActionLabel(CREATE_POOL_LABEL,connected,env,A,B),pendingTx&&/*#__PURE__*/React.createElement(Spin,{indicator:antIcon,className:\"add-spinner\"}));return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Popover,{trigger:\"hover\",content:/*#__PURE__*/React.createElement(\"div\",{style:{width:300}},\"Liquidity providers earn a fixed percentage fee on all trades proportional to their share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\")},/*#__PURE__*/React.createElement(Button,{type:\"text\"},\"Read more about providing liquidity.\")),/*#__PURE__*/React.createElement(CurrencyInput,{title:\"Input\",onInputChange:function onInputChange(val){if(A.amount!==val){setLastTypedAccount(A.mintAddress);}A.setAmount(val);},amount:A.amount,mint:A.mintAddress,onMintChange:function onMintChange(item){A.setMint(item);}}),/*#__PURE__*/React.createElement(\"div\",null,\"+\"),/*#__PURE__*/React.createElement(CurrencyInput,{title:\"Input\",onInputChange:function onInputChange(val){if(B.amount!==val){setLastTypedAccount(B.mintAddress);}B.setAmount(val);},amount:B.amount,mint:B.mintAddress,onMintChange:function onMintChange(item){B.setMint(item);}}),/*#__PURE__*/React.createElement(SupplyOverview,{mintAddress:[A.mintAddress,B.mintAddress],pool:pool}),pool&&/*#__PURE__*/React.createElement(Button,{className:\"add-button\",type:\"primary\",size:\"large\",onClick:executeAction,disabled:connected&&(pendingTx||!A.account||!B.account||A.account===B.account||!hasSufficientBalance)},generateActionLabel(ADD_LIQUIDITY_LABEL,connected,env,A,B),pendingTx&&/*#__PURE__*/React.createElement(Spin,{indicator:antIcon,className:\"add-spinner\"})),!pool&&createPoolButton);};","map":null,"metadata":{},"sourceType":"module"}